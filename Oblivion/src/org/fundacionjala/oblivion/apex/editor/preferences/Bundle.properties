# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

# Formating options
OpenIDE-Module-Display-Category=Apex
OpenIDE-Module-Name=Apex Editor
OpenIDE-Module-Short-Description=Apex Editor
text/x-cls=Apex

AN_Preview=Preview
AD_Preview=Preview

LBL_Braces=Braces

ApexBracesFormattingPanel.bracesPlacementLabel.text=Braces Placement
ApexBracesFormattingPanel.otherDeclarationLabel.text=Other:
ApexBracesFormattingPanel.methodDeclarationLabel.text=Method Declaration:
ApexBracesFormattingPanel.classDeclarationLabel.text=Class Declaration:

SAMPLE_Default=public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC

## Code to show in the preview panel of the reformat brace options
#
# Sample for the options: Class Sameline - Method Sameline - Other Sameline
SAMPLE_Braces_CS_MS_OS=\
class ClassA {\n\
\    public Integer propertyA {\n\
\        public get {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value) {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA() {\n\
\        if(number == 1) {\n\
\            try{\n\
\                methodA();\n\
\            } catch(Throwable ex) {\n\
\            } finally {\n\
\            }\n\
\        } else {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++) {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Sameline - Method Sameline - Other Newline
SAMPLE_Braces_CS_MS_ON=\
class ClassA {\n\
\    public Integer propertyA\n\
\    {\n\
\        public get {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value) {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA() {\n\
\        if(number == 1)\n\
\        {\n\
\            try\n\
\            {\n\
\                methodA();\n\
\            } catch(Throwable ex)\n\
\            {\n\
\            } finally\n\
\            {\n\
\            }\n\
\        } else\n\
\        {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++)\n\
\        {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Sameline - Method Newline - Other Newline
SAMPLE_Braces_CS_MN_ON=\
class ClassA {\n\
\    public Integer propertyA\n\
\    {\n\
\        public get\n\
\        {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value)\n\
\        {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA()\n\
\    {\n\
\        if(number == 1)\n\
\        {\n\
\            try\n\
\            {\n\
\                methodA();\n\
\            } catch(Throwable ex)\n\
\            {\n\
\            } finally\n\
\            {\n\
\            }\n\
\        } else\n\
\        {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++)\n\
\        {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Sameline - Method Newline - Other Sameline
SAMPLE_Braces_CS_MN_OS=\
class ClassA {\n\
\    public Integer propertyA {\n\
\        public get\n\
\        {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value)\n\
\        {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA()\n\
\    {\n\
\        if(number == 1) {\n\
\            try{\n\
\                methodA();\n\
\            } catch(Throwable ex) {\n\
\            } finally {\n\
\            }\n\
\        } else {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++) {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Newline - Method Sameline - Other Sameline
SAMPLE_Braces_CN_MS_OS=\
class ClassA\n\
{\n\
\    public Integer propertyA {\n\
\        public get {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value) {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA() {\n\
\        if(number == 1) {\n\
\            try{\n\
\                methodA();\n\
\            } catch(Throwable ex) {\n\
\            } finally {\n\
\            }\n\
\        } else {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++) {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Newline - Method Newline - Other Sameline
SAMPLE_Braces_CN_MN_OS=\
class ClassA\n\
{\n\
\    public Integer propertyA {\n\
\        public get\n\
\        {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value)\n\
\        {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA()\n\
\    {\n\
\        if(number == 1) {\n\
\            try{\n\
\                methodA();\n\
\            } catch(Throwable ex) {\n\
\            } finally {\n\
\            }\n\
\        } else {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++) {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Newline - Method Sameline - Other Newline
SAMPLE_Braces_CN_MS_ON=\
class ClassA\n\
{\n\
\    public Integer propertyA\n\
\    {\n\
\        public get {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value) {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA() {\n\
\        if(number == 1)\n\
\        {\n\
\            try\n\
\            {\n\
\                methodA();\n\
\            } catch(Throwable ex)\n\
\            {\n\
\            } finally\n\
\            {\n\
\            }\n\
\        } else\n\
\        {\n\
\        }\n\
\n\
\       for(Integer a = 0; a < number; a++)\n\
\        {\n\
\        }\n\
\    }\n\
}\n

# Sample for the options: Class Newline - Method Newline - Other Newline
SAMPLE_Braces_CN_MN_ON=\
class ClassA\n\
{\n\
\    public Integer propertyA\n\
\    {\n\
\        public get\n\
\        {\n\
\            return this.number;\n\
\        }\n\
\n\
\        public set(value)\n\
\        {\n\
\            this.number = value;\n\
\        }\n\
\    }\n\
\n\
\    public void methodA()\n\
\    {\n\
\        if(number == 1)\n\
\        {\n\
\            try\n\
\            {\n\
\                methodA();\n\
\            } catch(Throwable ex)\n\
\            {\n\
\            } finally\n\
\            {\n\
\            }\n\
\        } else\n\
\        {\n\
\        }\n\
\n\
\        for(Integer a = 0; a < number; a++)\n\
\        {\n\
\        }\n\
\    }\n\
}\n
